//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleRssFeed
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class SampleRssFeed { }
#else

	public class SampleRssFeed : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public SampleRssFeed()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/weave;component/SampleData/SampleRssFeed/SampleRssFeed.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private News _News = new News();

		public News News
		{
			get
			{
				return this._News;
			}
		}

		private string _Header = string.Empty;

		public string Header
		{
			get
			{
				return this._Header;
			}

			set
			{
				if (this._Header != value)
				{
					this._Header = value;
					this.OnPropertyChanged("Header");
				}
			}
		}

		private string _CurrentPageDisplay = string.Empty;

		public string CurrentPageDisplay
		{
			get
			{
				return this._CurrentPageDisplay;
			}

			set
			{
				if (this._CurrentPageDisplay != value)
				{
					this._CurrentPageDisplay = value;
					this.OnPropertyChanged("CurrentPageDisplay");
				}
			}
		}

		private string _NewItemCount = string.Empty;

		public string NewItemCount
		{
			get
			{
				return this._NewItemCount;
			}

			set
			{
				if (this._NewItemCount != value)
				{
					this._NewItemCount = value;
					this.OnPropertyChanged("NewItemCount");
				}
			}
		}

		private Categories _Categories = new Categories();

		public Categories Categories
		{
			get
			{
				return this._Categories;
			}
		}
	}

	public class News : System.Collections.ObjectModel.ObservableCollection<NewsItem>
	{ 
	}

	public class NewsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Title = string.Empty;

		public string Title
		{
			get
			{
				return this._Title;
			}

			set
			{
				if (this._Title != value)
				{
					this._Title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		private string _FeedIconUri = string.Empty;

		public string FeedIconUri
		{
			get
			{
				return this._FeedIconUri;
			}

			set
			{
				if (this._FeedIconUri != value)
				{
					this._FeedIconUri = value;
					this.OnPropertyChanged("FeedIconUri");
				}
			}
		}

		private string _PublishDate = string.Empty;

		public string PublishDate
		{
			get
			{
				return this._PublishDate;
			}

			set
			{
				if (this._PublishDate != value)
				{
					this._PublishDate = value;
					this.OnPropertyChanged("PublishDate");
				}
			}
		}

		private string _ImageUrl = string.Empty;

		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}

			set
			{
				if (this._ImageUrl != value)
				{
					this._ImageUrl = value;
					this.OnPropertyChanged("ImageUrl");
				}
			}
		}

		private string _OriginalSource = string.Empty;

		public string OriginalSource
		{
			get
			{
				return this._OriginalSource;
			}

			set
			{
				if (this._OriginalSource != value)
				{
					this._OriginalSource = value;
					this.OnPropertyChanged("OriginalSource");
				}
			}
		}

		private bool _HasImage = false;

		public bool HasImage
		{
			get
			{
				return this._HasImage;
			}

			set
			{
				if (this._HasImage != value)
				{
					this._HasImage = value;
					this.OnPropertyChanged("HasImage");
				}
			}
		}

		private bool _HasBeenViewed = false;

		public bool HasBeenViewed
		{
			get
			{
				return this._HasBeenViewed;
			}

			set
			{
				if (this._HasBeenViewed != value)
				{
					this._HasBeenViewed = value;
					this.OnPropertyChanged("HasBeenViewed");
				}
			}
		}

		private string _FormattedForMainPageSourceAndDate = string.Empty;

		public string FormattedForMainPageSourceAndDate
		{
			get
			{
				return this._FormattedForMainPageSourceAndDate;
			}

			set
			{
				if (this._FormattedForMainPageSourceAndDate != value)
				{
					this._FormattedForMainPageSourceAndDate = value;
					this.OnPropertyChanged("FormattedForMainPageSourceAndDate");
				}
			}
		}
	}

	public class CategoriesItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private double _NewArticleCount = 0;

		public double NewArticleCount
		{
			get
			{
				return this._NewArticleCount;
			}

			set
			{
				if (this._NewArticleCount != value)
				{
					this._NewArticleCount = value;
					this.OnPropertyChanged("NewArticleCount");
				}
			}
		}
	}

	public class Categories : System.Collections.ObjectModel.ObservableCollection<CategoriesItem>
	{ 
	}
#endif
}
